{"version":3,"sources":["Images/clock.png","Components/Logo.js","Layouts/Header.js","Components/TimersBar.js","AppContext.js","Components/Stopwatch.js","Components/Timer.js","Components/Alarm.js","Components/MoreTime.js","Layouts/BodyApp.js","App.js","index.js"],"names":["LogoDiv","styled","div","LogoText","Logo","src","clock","alt","Header","Container","Button","button","props","active","TimersBar","handler","activeButton","Buttons","title","name","map","item","onClick","bind","defaultObject","theme","AppContext","createContext","value","StopWatch","Stopwatch","useState","flag","setFlag","seconds","setSeconds","minutes","setMinutes","hours","setHours","laps","setLaps","useContext","useEffect","stopwatch","setTimeout","prevValue","clearTimeout","displayStopwatch","displayLaps","id","timeHour","timeMin","timeSec","className","length","FormBox","DisplayTimeBox","Timer","restoreDateCookie","document","cookie","split","isCookies","q","Date","timeNowForm","setTimeNowForm","getFullYear","year","setYear","getMonth","month","setMonth","getDate","day","setDay","getHours","hour","setHour","getMinutes","handleForm","e","nameValue","target","tempYear","substring","tempMonh","tempDay","form","type","min","onChange","readOnly","max","timeDiff","timeNow","timeDifference","getTime","eDaysToDate","daysToDate","Math","floor","eHoursToDate","hoursToDate","eMinutesToDate","minutesToDate","eSecondsToDate","days","endTime","timer","setInterval","clearInterval","showTime","ProgressCircleBox","RemaningTimeBox","Form","Alarm","progress","setProgress","secondsStart","setSecondsStart","handleTime","console","log","handleTimeButtons","nameParametr","typeOperation","displayRemaningTime","progressBox","CircularProgress","sx","color","margin","size","thickness","variant","position","top","left","zIndex","remainingSeconds","calculateProgress","calculate","MoreTime","BodyApp","timeContent","setTimeContent","setTheme","Provider","nameOfTimer","key","displayContent","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e63b2327.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/clock.1f5cb8c8.png\";","import React from 'react';\r\n\r\nimport styled from 'styled-components'\r\n\r\nimport clock from '../Images/clock.png'\r\n\r\n\r\nconst LogoDiv = styled.div`\r\n    //border: 3px solid red;\r\n    overflow: hidden;\r\n    width: 100%;\r\n    max-width: 600px;\r\n    margin: 20px auto;\r\n\r\n    img {\r\n        width: 5rem;\r\n        float: left;\r\n    }\r\n`\r\n\r\nconst LogoText = styled.div`\r\n    float: left;\r\n    margin-left: 20px;\r\n\r\n    h1, h2 {\r\n        margin: 0;\r\n        text-transform: uppercase;\r\n    }\r\n\r\n    h1 {\r\n        font-size: 40px;\r\n    } \r\n`\r\n\r\nconst Logo = () => {\r\n    return ( \r\n        <LogoDiv>\r\n        <img src={clock} alt=\"clock\" />\r\n        <LogoText>\r\n            <h2>Your</h2>\r\n            <h1>Time</h1>\r\n        </LogoText>\r\n        </LogoDiv>\r\n     );\r\n}\r\n \r\nexport default Logo;","import React from 'react';\r\n\r\nimport Logo from '../Components/Logo'\r\n\r\nconst Header = () => {\r\n    return ( \r\n        <>\r\n        <Logo />\r\n        </>\r\n     );\r\n}\r\n \r\nexport default Header;","import React, {useState} from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    margin: 20px auto;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    max-width: 400px;\r\n    //border: 1px solid red;\r\n`\r\n\r\nconst Button = styled.button`\r\n    padding: 5px 15px;\r\n    outline: ${props => props.active? \"1.5px solid black\" : \"1.5px solid transparent\"};\r\n    font-size: 1rem;\r\n    background-color: transparent;\r\n    border: 0;\r\n    border-radius: 10px;\r\n    color: ${props => props.active ? \"black\" : \"black\"};\r\n    transition: .25s;\r\n\r\n    &:hover {\r\n        cursor: pointer;;\r\n    }\r\n`\r\n\r\nconst TimersBar = ({handler, activeButton}) => {\r\n    const buttonsProperty = [\r\n        {\r\n            title: 'Stoper',\r\n            name: 'stopwatch'\r\n        },\r\n        {\r\n            title: 'Timer',\r\n            name: 'timer'\r\n        },\r\n        {\r\n            title: 'Alarm',\r\n            name: 'alarm'\r\n        },\r\n        {\r\n            title: 'Więcej..',\r\n            name: 'more_time'\r\n        },\r\n    ]\r\n    const Buttons = (\r\n        buttonsProperty.map(item => (\r\n            <Button active={activeButton === item.name ? true : false} onClick={handler.bind(this, item.name)}>{item.title}</Button>\r\n        ))\r\n    )\r\n\r\n    return ( \r\n        <Container>\r\n            {Buttons} \r\n        </Container>\r\n     );\r\n}\r\n \r\nexport default TimersBar;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n<Button active={activeButton === \"stopwatch\" ? true : false} onClick={handler.bind(this, 'stopwatch')}>Stopwatch</Button>\r\n<Button onClick={handler.bind(this, 'timer')}>Timer</Button>\r\n<Button onClick={handler.bind(this, 'alarm')}>Alarm</Button>\r\n<Button onClick={handler.bind(this, 'more_time')}>More time</Button>\r\n\r\n*/","import { createContext } from 'react';\r\n\r\nexport const defaultObject = {\r\n    theme: \"dark\"\r\n}\r\n\r\nexport const AppContext = createContext(defaultObject);\r\n","import React, {useContext, useEffect, useState} from 'react';\r\n\r\nimport styled from \"styled-components\";\r\n\r\n// Import kontektstu\r\nimport { AppContext } from \"../AppContext\";\r\n\r\n// Stylowanie komponentu StopWatch\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    text-align: center;\r\n`\r\n\r\nconst Buttons = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 0 auto;    \r\n\r\n    button {\r\n        font-size: 1.5rem;\r\n        margin: 0 20px;\r\n        border-radius: 25px;\r\n        outline: none;\r\n        border: none;\r\n        padding: 10px 20px;\r\n        margin: 10px;\r\n        width: 300px;\r\n        transition: 0.1s;\r\n    }\r\n\r\n    .start_stop {\r\n       background-color:  ${props => props.value? \" #5AC994\" : \" #dedede\"};\r\n    }\r\n`\r\n\r\nconst StopWatch = styled.div`\r\n    font-size: 5rem;\r\n    margin: 10vh 0;\r\n`\r\n\r\n\r\nconst Stopwatch = () => {\r\n\r\n    const [flag, setFlag] = useState(false)\r\n    const [seconds, setSeconds] = useState(0);\r\n    const [minutes, setMinutes] = useState(0);\r\n    const [hours, setHours] = useState(0)\r\n    const [laps, setLaps] = useState([]) \r\n\r\n    // Obsługa motywu z kontekstu\r\n    const {theme} = useContext(AppContext);\r\n\r\n    useEffect(() => {\r\n        const stopwatch = setTimeout(() => {\r\n            if(flag) setSeconds(prevValue => prevValue +1)\r\n          }, 1000);\r\n\r\n        return () => clearTimeout(stopwatch)\r\n    })\r\n\r\n    const resetStopwatch = () => {\r\n        setHours(0);\r\n        setMinutes(0);\r\n        setSeconds(0);\r\n        setLaps([])\r\n        setFlag(false);\r\n    }\r\n\r\n    const handleSaveTime = () => {  \r\n        const item = {\r\n            id: laps.length,\r\n            timeSec: seconds <= 9 ? `0${seconds}` : seconds,\r\n            timeMin: minutes <= 9 ? `0${minutes}` : minutes,\r\n            timeHour: hours <= 9 ? `0${hours}` : hours,\r\n        } \r\n        setLaps([...laps, item])\r\n    }\r\n\r\n    if(seconds > 59) {\r\n        setSeconds(0);\r\n        setMinutes(prevValue => prevValue + 1);\r\n    }\r\n\r\n    if(minutes > 59){\r\n        setMinutes(0);\r\n        setHours(prevValue => prevValue +1)\r\n    }\r\n\r\n    const displayStopwatch = (\r\n        <span>\r\n            {hours > 0 ? (`${hours}:`) : \"\" /* Wyświetlanie dopiero gdy jest większe od 0 */} \r\n            {minutes > 0 || hours > 0 ? (minutes <= 9 && hours >0 ? `0${minutes}:` : `${minutes}:`) : \"\"}\r\n            {seconds <= 9 ? `0${seconds}` : seconds }\r\n        </span>\r\n    )\r\n    \r\n    const displayLaps = (\r\n        laps.map(item => (\r\n            <p key={item.id}>\r\n                {item.id+1} lap: {item.timeHour}:{item.timeMin}:{item.timeSec}\r\n            </p>\r\n        ))\r\n    )\r\n    \r\n\r\n    return ( \r\n        <Container>\r\n            <StopWatch>{displayStopwatch}</StopWatch>\r\n            <Buttons value={flag}>\r\n                <button className='start_stop' onClick={() => { setFlag(prevValue => !prevValue)}}>{flag ? 'Stop' : 'Start'}</button>\r\n                <button onClick={resetStopwatch.bind(this)}>Reset</button>\r\n                <button onClick={handleSaveTime.bind(this)}>Save time</button>\r\n            </Buttons>\r\n            {displayLaps}\r\n        </Container>\r\n     );\r\n}\r\n \r\nexport default Stopwatch;","import React, {useEffect, useState} from 'react';\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport Button from '@mui/material/Button';\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    .btn_start, .alert_input_date {\r\n        margin: 20px auto;\r\n        font-size: 1.5rem;\r\n        border-radius: 25px;\r\n        outline: none;\r\n        border: none;\r\n        padding: 10px 20px;\r\n    }\r\n\r\n    .alert_input_date {\r\n        font-size: 20px;\r\n    }\r\n`\r\n\r\nconst FormBox = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    margin-top: 20px;\r\n    \r\n\r\n    .timer_date {\r\n        margin: 0 auto;\r\n        width: 250px;\r\n        height: 50px;\r\n        font-size: 25px;\r\n        text-align: center;\r\n    }\r\n    \r\n\r\n    .timer_hour {\r\n        width: 100%;\r\n        display: flex;\r\n        justify-content: center;\r\n        margin-top: 20px;\r\n    }\r\n\r\n    .handle_Time_Box_Timer{\r\n        display: flex;\r\n        flex-direction: column;\r\n        margin: 0 10px;\r\n    }\r\n\r\n    input {\r\n        margin: 10px auto;\r\n        height: 70px;\r\n        width: 70px;\r\n        text-align: center;\r\n        font-size: 30px;\r\n    }\r\n\r\n    button {\r\n        font-size: 40px;\r\n        width: 70px;\r\n        height: 50px;\r\n        text-align: center;\r\n        margin: 0 auto;\r\n   }\r\n\r\n\r\n    // Ukrywanie strzałek pola input\r\n    input::-webkit-outer-spin-button,\r\n    input::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n    }\r\n\r\n    /* Firefox */\r\n    input[type=number] {\r\n    -moz-appearance: textfield;\r\n    }\r\n`\r\nconst DisplayTimeBox = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    span {\r\n        width: 200px;\r\n        margin: 20px auto;\r\n        font-size: 25px;\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: center;\r\n\r\n        p {\r\n            padding-left: 10px;\r\n            font-size: 35px;\r\n            margin: 0;\r\n        }\r\n    }\r\n`\r\nconst Timer = () => {\r\n\r\n    // Odczyt ciasteczka\r\n    const restoreDateCookie = document.cookie.split('/');\r\n    const [isCookies, setIsCookies] = useState(restoreDateCookie[restoreDateCookie.length-1] === \"true\" ? true : false)\r\n    const q = restoreDateCookie.length;\r\n\r\n    // Zmienne główne do obsługi aplikacji\r\n    const [flag, setFlag] = useState(false);\r\n    \r\n    const [timeNowForm, setTimeNowForm] = useState(new Date())\r\n    \r\n    const [year, setYear] = useState(isCookies ? restoreDateCookie[q-7] : timeNowForm.getFullYear());\r\n    const [month, setMonth] = useState(isCookies ? restoreDateCookie[q-6] : timeNowForm.getMonth() + 1);\r\n    const [day, setDay] = useState(isCookies ? restoreDateCookie[q-5] : timeNowForm.getDate());\r\n    const [hour, setHour] = useState(isCookies ? restoreDateCookie[q-4] : timeNowForm.getHours());\r\n    const [minutes, setMinutes] = useState(isCookies ? restoreDateCookie[q-3] : timeNowForm.getMinutes());\r\n    const [seconds, setSeconds] = useState(isCookies ? restoreDateCookie[q-2] : 0);\r\n\r\n\r\n    // Obliczanie ilości dni w miesiacu, czyli ostatniego dnia miesiąca\r\n    const daysInMonth =  (month, year) => {\r\n        return new Date(year, month, 0).getDate();\r\n    }\r\n\r\n    const timeDifference = (year, month, day, hour, minutes, seconds ) => {\r\n        const timeNow = new Date()\r\n\r\n        const timeTimer = new Date(year, month-1, day, hour, minutes, seconds)\r\n\r\n        const msInADay = 24 * 60 * 60 * 1000; //1 dzień w milisekundach\r\n\r\n        // Obliczanie różnicy czasu w ms\r\n        const timeDifference = timeTimer.getTime() - timeNow.getTime();\r\n    \r\n        const eDaysToDate = timeDifference / msInADay;\r\n        const daysToDate = Math.floor(eDaysToDate);\r\n        \r\n        let daysToDateFix = (daysToDate < 1)? 1 : daysToDate;\r\n\r\n        const eHoursToDate = (eDaysToDate % daysToDateFix)*24;\r\n        const hoursToDate = Math.floor(eHoursToDate);\r\n\r\n        const eMinutesToDate = (eHoursToDate - hoursToDate)*60;\r\n        const minutesToDate = Math.floor(eMinutesToDate);\r\n\r\n        const eSecondsToDate = Math.floor((eMinutesToDate - minutesToDate)*60);\r\n        const secondsToDate = Math.floor(eSecondsToDate);\r\n\r\n        const endTime = timeDifference < 0; // Czy koniec odliczania\r\n\r\n        return {\r\n            days : daysToDate,\r\n            hours : hoursToDate,\r\n            minutes : minutesToDate,\r\n            seconds : secondsToDate,\r\n            endTime\r\n        }\r\n    }\r\n\r\n    // Wyświetlanie odliczania\r\n    const showTime = (timeDiff) => (\r\n        <DisplayTimeBox>\r\n            <span>Dni: <p>{timeDiff.days}</p></span>\r\n            <span>Godziny: <p>{timeDiff.hours}</p></span>\r\n            <span>Minuty: <p>{timeDiff.minutes}</p></span>\r\n            <span>Sekundy: <p>{timeDiff.seconds}</p></span>\r\n        </DisplayTimeBox>\r\n    )\r\n    \r\n    // Obsługa formularza\r\n    const handleForm = (e) => {\r\n        const nameValue = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        switch (nameValue) {\r\n            case \"hour\":\r\n                setHour(value)\r\n                break;\r\n            case \"minutes\":\r\n                setMinutes(value)\r\n                break;\r\n            \r\n            // testowana część kodu\r\n            case \"calendar-date\":\r\n                const tempYear = value.substring(0,4);\r\n                const tempMonh = value.substring(5,7);\r\n                const tempDay = value.substring(8,10);\r\n                setYear(tempYear)\r\n                setMonth(tempMonh)\r\n                setDay(tempDay)\r\n                break;\r\n            case \"hours\":\r\n                \r\n                value === '-' ? \r\n                (hour > 0 ? setHour(prevValue => prevValue - 1) : setHour(0)) \r\n                : (hour < 23 ? setHour(prevValue => (prevValue*1) + 1) : setHour(0)) \r\n                break;\r\n            case \"minutes_2\":\r\n                value === '-' ? \r\n                (minutes > 0 ? setMinutes(prevValue => prevValue - 1) : setMinutes(0)) \r\n                : (minutes < 59 ? setMinutes(prevValue => (prevValue*1) + 1) : setMinutes(0)) \r\n                break;\r\n                \r\n            default:\r\n                break;\r\n        }\r\n\r\n        //console.log(value)\r\n\r\n    }\r\n\r\n    // Funkcja obsługująca odliczanie. Decyduje czy podano poprawną datę czy nie.\r\n    const handleTimer = () => {\r\n        if(!timeDiff.endTime) setFlag(prevValue => !prevValue)\r\n        \r\n        // Usuwanie ciasteczka w momencie tylko gdy użytkownik zatrzyma odliczanie\r\n        if(flag) {\r\n            document.cookie = \"timerCookie=; SameSite=None; secure; max-age=-1;\"\r\n        }\r\n    }\r\n\r\n\r\n    const form = (\r\n        <FormBox>\r\n            <input className='timer_date' type=\"date\" name=\"calendar-date\" min=\"2022-03-30\"  onChange={handleForm}/>\r\n            <br/>\r\n            {/*<input type='number' name=\"year\" min={timeNowForm.getFullYear()} max=\"2999\" value={year} onChange={handleForm}/>\r\n            <input type='number' name=\"month\" min={year > timeNowForm.getFullYear() ? \"1\" : timeNowForm.getMonth()+1} max=\"12\" value={month} onChange={handleForm}/>\r\n            <input type='number' name=\"day\" min={month > timeNowForm.getMonth()+1 ? \"1\" : timeNowForm.getDate()} max={daysInMonth(month, year)} value={day <= daysInMonth(month, year) ? day : daysInMonth(month, year) } onChange={handleForm}/>\r\n            */}\r\n            <div className='timer_hour'>\r\n                <div className='handle_Time_Box_Timer'>\r\n                    <Button  name=\"hours\" value=\"+\" onClick={handleForm.bind(this)}>+</Button>\r\n                    <input readOnly=\"readOnly\" type='number' name=\"hours\" min={day > timeNowForm.getDate() ? \"0\" : timeNowForm.getHours()} max=\"23\" value={hour} onChange={handleForm}/> \r\n                    <Button  name=\"hours\" value=\"-\" onClick={handleForm.bind(this)}>-</Button>\r\n                </div>\r\n                <div className='handle_Time_Box_Timer'>\r\n                    <Button  name=\"minutes_2\" value=\"+\" onClick={handleForm.bind(this)}>+</Button>\r\n                    <input readOnly=\"readOnly\" type='number' name=\"minutes_2\" min={ hour > timeNowForm.getHours() ? \"0\" : timeNowForm.getMinutes() } max=\"59\" value={minutes} onChange={handleForm}/> \r\n                    <Button  name=\"minutes_2\" value=\"-\" onClick={handleForm.bind(this)}>-</Button>\r\n                </div>\r\n            </div>\r\n        </FormBox>\r\n    )\r\n\r\n    let timeDiff = timeDifference(year, month, day, hour, minutes, seconds);\r\n\r\n\r\n    // Tworzenie ciasteczka gdy: nie istnieje && gdy rozpoczniemy odliczanie    \r\n    if(isCookies === false && flag === true){\r\n        document.cookie = `timerCookie = /${year}/${month}/${day}/${hour}/${minutes}/${seconds}/true; SameSite=None; secure`\r\n    }\r\n\r\n    // Sprawdzenie co zawiera ciasteczko aktualnie\r\n    //console.log(restoreDateCookie)\r\n\r\n    useEffect(() => {\r\n        const timer = setInterval(() => {\r\n            if(flag) setTimeNowForm(new Date())\r\n          }, 1000);\r\n\r\n        return () => clearInterval(timer)\r\n    })\r\n\r\n    return ( \r\n        <Container>\r\n            {flag ? null : form}\r\n            {timeDiff.endTime ? <span className='alert_input_date'>Podaj prawidłową datę</span> : (flag ? showTime(timeDiff) : null)}\r\n            {!timeDiff.endTime ? <button className='btn_start' onClick={handleTimer}>{flag === false ? \"Rozpocznij odliczanie\" : \"Stop\"}</button> : null}\r\n        </Container>\r\n     );\r\n}\r\n \r\nexport default Timer;","import React, {useState, useEffect} from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    text-align: center;\r\n    overflow: hidden;\r\n\r\n    .btn_start {\r\n        width: 150px;\r\n        margin: 20px auto;\r\n        font-size: 1.5rem;\r\n        border-radius: 25px;\r\n        outline: none;\r\n        border: none;\r\n        padding: 10px 20px;\r\n    }\r\n`\r\n\r\nconst ProgressCircleBox = styled.div`\r\n    margin: 0 auto;\r\n    position: relative;\r\n    height: 350px;\r\n    width: 350px;\r\n\r\n    p {\r\n        position: absolute;\r\n        top: 70%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        font-size: 20px;\r\n    }\r\n`\r\n\r\nconst RemaningTimeBox = styled.div`\r\n    z-index: 1;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    font-size: 70px;\r\n\r\n    span {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        transform: translate(-50%, -50%);\r\n        margin: 0;\r\n    }\r\n`\r\n\r\nconst Form = styled.div`\r\n   width: 100%;\r\n   //height: 400px;\r\n   padding: 50px 0;\r\n   display: flex;\r\n   justify-content: center;\r\n\r\n   .handle_Time_Box {\r\n       width: 80px;\r\n       display: flex;\r\n       flex-wrap: wrap-reverse;\r\n       justify-content: center;\r\n       align-items: center;\r\n   }\r\n\r\n   input {\r\n       margin: 10px auto;\r\n       height: 70px;\r\n       width: 70px;\r\n       text-align: center;\r\n       font-size: 30px;\r\n   }\r\n\r\n   button {\r\n        font-size: 40px;\r\n        width: 70px;\r\n        height: 50px;\r\n   }\r\n\r\n   // Ukrywanie strzałek pola input\r\n    input::-webkit-outer-spin-button,\r\n    input::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n    }\r\n\r\n    /* Firefox */\r\n    input[type=number] {\r\n    -moz-appearance: textfield;\r\n    }\r\n    \r\n`\r\n \r\nconst Alarm = () => {\r\n    const [flag, setFlag] = useState(false)\r\n\r\n    const [hours, setHours] = useState(0);\r\n    const [minutes, setMinutes] = useState(0);\r\n    const [seconds, setSeconds] = useState(0);\r\n\r\n    const [progress, setProgress] = useState(0);\r\n\r\n    const [secondsStart, setSecondsStart] = useState(0)\r\n                \r\n    const handleTime = (e) => {\r\n        // Obsługa ustawiania wartości w formularzu\r\n        const nameValue = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        switch (nameValue) {\r\n            case \"hours\":\r\n                value < 101 ? setHours(value) : setHours(60)\r\n                console.log(\"działam\")\r\n                break;\r\n            case \"minutes\":\r\n                value < 60 ? setMinutes(value) : setMinutes(59)\r\n                break;\r\n            case \"seconds\":\r\n                value < 60 ? setSeconds(value) : setSeconds(59)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const calculate = () => {\r\n\r\n        // Obsługa CircuralProgress, obliczanie pozostałej ilości sekund i ustawianie progresu\r\n        const remainingSeconds = secondsStart - ((hours*60*60) + (minutes*60) + seconds);\r\n        const calculateProgress = Math.floor((remainingSeconds * 100)  / secondsStart);\r\n        console.log(calculateProgress + \" %\");\r\n        setProgress(calculateProgress);\r\n       \r\n\r\n        if(seconds > 0) {\r\n            setSeconds(prevValue => prevValue -1)\r\n        }\r\n        else {\r\n            if(minutes > 0){\r\n                setMinutes(prevValue => prevValue -1)\r\n                setSeconds(59)\r\n            }\r\n            else {\r\n                if(hours > 0){\r\n                    setHours(prevValue => prevValue -1)\r\n                    setMinutes(59);\r\n                    setSeconds(59)\r\n                }\r\n                else(\r\n                    setFlag(false)\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const startFunction = () => {\r\n        setSecondsStart(((hours*60*60) + (minutes*60) + seconds))\r\n        setFlag(prevValue => !prevValue)\r\n    }\r\n\r\n    const handleTimeButtons = (nameParametr, typeOperation) => {\r\n        switch (nameParametr) {\r\n            case 'hours':\r\n                if(typeOperation === '-' && hours > 0) setHours(prevValue => (prevValue*1) -1)\r\n                else if(typeOperation === '+' && hours < 100) setHours(prevValue => (prevValue*1) +1)\r\n                break;\r\n            case 'minutes':\r\n                if(typeOperation === '-' && minutes > 0) setMinutes(prevValue => (prevValue*1) -1)\r\n                else if(typeOperation === '+' && minutes < 59) setMinutes(prevValue => (prevValue*1) +1)\r\n                break;\r\n            case 'seconds':\r\n                if(typeOperation === '-' && seconds > 0) setSeconds(prevValue => (prevValue*1) -1)\r\n                else if(typeOperation === '+' && seconds < 59) setSeconds(prevValue => (prevValue*1) +1)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    \r\n    const form = (\r\n        <Form>\r\n            <div className='handle_Time_Box'>\r\n                <Button onClick={handleTimeButtons.bind(this, 'hours', '-')}>-</Button>\r\n                    <input type='number' min=\"0\" max=\"60\" name=\"hours\" value={hours} onChange={handleTime} />\r\n                <Button onClick={handleTimeButtons.bind(this, 'hours', '+')}>+</Button>\r\n            </div>\r\n            <div className='handle_Time_Box'>\r\n                <Button onClick={handleTimeButtons.bind(this, 'minutes', '-')}>-</Button>\r\n                    <input type='number' min=\"0\" name=\"minutes\" value={minutes} onChange={handleTime} />\r\n                <Button onClick={handleTimeButtons.bind(this, 'minutes', '+')}>+</Button>\r\n            </div>\r\n            <div className='handle_Time_Box'>\r\n                <Button onClick={handleTimeButtons.bind(this, 'seconds', '-')}>-</Button>\r\n                    <input type='number' min=\"0\" name=\"seconds\" value={seconds} onChange={handleTime} />\r\n                <Button onClick={handleTimeButtons.bind(this, 'seconds', '+')}>+</Button>\r\n            </div>\r\n        </Form>\r\n    )\r\n\r\n    const displayRemaningTime = (\r\n        <RemaningTimeBox>\r\n            <span>\r\n                {hours > 0 ? (`${hours}:`) : \"\" /* Wyświetlanie dopiero gdy jest większe od 0 */} \r\n                {minutes > 0 || hours > 0 ? (minutes <= 9 && hours >0 ? `0${minutes}:` : `${minutes}:`) : \"\"}\r\n                {seconds <= 9 ? `0${seconds}` : seconds }\r\n            </span>\r\n        </RemaningTimeBox>\r\n    )\r\n\r\n    const progressBox = (\r\n            <ProgressCircleBox>\r\n                <CircularProgress \r\n                sx={{\r\n                    color: 'black',\r\n                    margin: '0 auto',\r\n                }}\r\n                size={350}\r\n                thickness={0.6}\r\n                variant=\"determinate\" value={progress} />\r\n                <CircularProgress \r\n                sx={{\r\n                    color: '#dedede',\r\n                    position: 'absolute',\r\n                    top: '0',\r\n                    left: '0',\r\n                    zIndex: '-1'\r\n                }}\r\n                size={350}\r\n                thickness={0.5}\r\n                variant=\"determinate\" value={100} />\r\n            {displayRemaningTime}\r\n            <p>{progress}%</p>\r\n            </ProgressCircleBox>\r\n    )\r\n\r\n    useEffect(() => {\r\n        const timer = setInterval(() => {\r\n            if(flag) calculate()\r\n          }, 1000);\r\n\r\n        return () => clearInterval(timer)\r\n    })\r\n\r\n    return ( \r\n        <Container>  \r\n            {flag ? progressBox : form}\r\n            <button className='btn_start' onClick={startFunction }>{flag ? \"Stop\" : \"Start\"}</button>\r\n        </Container>\r\n     );\r\n}\r\n \r\nexport default Alarm;","import React from 'react';\r\n\r\nconst MoreTime = () => {\r\n    return ( \r\n        <>\r\n        renderuje więcej opcji\r\n        </>\r\n     );\r\n}\r\n \r\nexport default MoreTime;","import React, {useState} from 'react';\r\n\r\n// Importowanie przycisków (wybieranie timera)\r\nimport TimersBar from '../Components/TimersBar';\r\n\r\n// Import czasomierzy\r\nimport Stopwatch from '../Components/Stopwatch';\r\nimport Timer from '../Components/Timer';\r\nimport Alarm from '../Components/Alarm';\r\nimport MoreTime from '../Components/MoreTime';\r\n\r\n// Import kontekstu\r\nimport { AppContext, defaultObject } from \"../AppContext\";\r\n\r\n\r\nconst BodyApp = () => {\r\n\r\n    const [timeContent, setTimeContent] = useState('stopwatch');\r\n    const handleTimeContent = (nameOfTimer) =>{\r\n        console.log(nameOfTimer)\r\n        setTimeContent(nameOfTimer)\r\n    }\r\n\r\n    const [theme, setTheme] = useState(defaultObject.theme);\r\n    console.log(\"Aktualny motyw: \" + theme);\r\n\r\n    const displayContent = (key) => {\r\n        switch (key) {\r\n            case 'stopwatch':\r\n                return <Stopwatch />;\r\n            case 'timer':\r\n                return <Timer/>\r\n            case 'alarm':\r\n                return <Alarm/>\r\n            case 'more_time':\r\n                return <MoreTime/>\r\n                    \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <>\r\n            <AppContext.Provider value={({ theme, setTheme})}>\r\n                <TimersBar activeButton={timeContent} handler={handleTimeContent}/>\r\n                {displayContent(timeContent)}\r\n            </AppContext.Provider>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default BodyApp;","import './App.css';\r\n\r\nimport Header from './Layouts/Header'\r\nimport Footer from './Layouts/Footer'\r\nimport BodyApp from './Layouts/BodyApp'\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n    <Header/>\r\n    <BodyApp />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}