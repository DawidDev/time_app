{"version":3,"sources":["config/configTheme.js","Components/Logo.js","AppContext.js","Layouts/Header.js","Components/TimersBar.js","Components/DisplayLaps.js","Components/Stopwatch.js","Components/TimeDifferenceCalculate.js","Components/Timer.js","Components/Alarm.js","Components/MoreTime.js","Layouts/BodyApp.js","App.js","index.js"],"names":["ThemeObject","light","colorHeader","colorTimersBar","colorTimersBarBorder","colorStartCalculate","colorActiveMainButtons","colorCircuralProgress","colorCircuralProgressBack","colorBorderLineInMoreComponent","colorBorderLineInStopwatch","dark","global","colorMainButtons","colorMainButtonsHover","LogoDiv","styled","div","Logo","defaultObject","theme","setTheme","AppContext","createContext","HeaderContainer","props","themeObject","SwitchElement","Header","useContext","useState","switchBtn","setSwitchBtn","console","log","Switch","checked","onChange","prevValue","inputProps","size","color","Container","Button","button","active","TimersBar","handler","activeButton","Buttons","title","name","map","item","onClick","bind","DisplayLaps","seconds","minutes","hours","laps","setLaps","displayLaps","id","timeHour","timeMin","timeSec","btnResetSavedLapsDisplay","length","value","StopWatch","DisplayTimes","p","Stopwatch","flag","setFlag","setSeconds","setMinutes","setHours","useEffect","stopwatch","setTimeout","clearTimeout","displayStopwatch","className","timeDifference","year","month","day","hour","timeNow","Date","getTime","eDaysToDate","daysToDate","Math","floor","eHoursToDate","hoursToDate","eMinutesToDate","minutesToDate","eSecondsToDate","days","endTime","FormBox","DisplayTimeBox","Timer","restoreDateCookie","document","cookie","split","isCookies","q","timeNowForm","setTimeNowForm","getFullYear","setYear","getMonth","setMonth","getDate","setDay","getHours","setHour","getMinutes","handleForm","e","nameValue","target","tempYear","substring","tempMonh","tempDay","form","type","min","readOnly","max","timeDiff","timer","setInterval","clearInterval","showTime","ProgressCircleBox","RemaningTimeBox","Form","Alarm","progress","setProgress","secondsStart","setSecondsStart","handleTime","handleTimeButtons","nameParametr","typeOperation","displayRemaningTime","colorCircuralProgres","colorCircuralProgresBack","progressBox","CircularProgress","sx","margin","zIndex","thickness","variant","position","top","left","remainingSeconds","calculateProgress","calculate","ResultTimeBox","MoreTime","showSmallVersionTime","toHolidays","toEndOfTheYear","toEndOfTheDay","toEndOfTheMonth","daysInMonth","BodyApp","timeContent","setTimeContent","nameOfTimer","key","displayContent","GlobalContainer","colorTheme","App","setThemeValue","Provider","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c7e4d9dd.chunk.js","sourcesContent":["const ThemeObject = {\r\n    light:{\r\n        colorHeader: \"#306060\",\r\n        colorTimersBar: \"black\",\r\n        colorTimersBarBorder: \"1.25px solid #306060\",\r\n        //colorMainButtons: \"#306060\",\r\n        colorStartCalculate: \"#5AC994\", // Kolor przycisków rozpoczynających odliczanie\r\n        colorActiveMainButtons: \"#306060\",\r\n        colorCircuralProgress: \"#306060\",\r\n        colorCircuralProgressBack: \"#e2e0ec\",\r\n        colorBorderLineInMoreComponent: \"1px solid #306060\", \r\n        colorBorderLineInStopwatch: \"1px solid #306060\"\r\n    },\r\n    dark:{\r\n        colorHeader: \"#fff\",\r\n        colorTimersBar: \"#fff\",\r\n        colorTimersBarBorder: \"1.25px solid #fff\",\r\n        //colorMainButtons: \"#306060\",\r\n        colorStartCalculate: \"#5AC994\", // Kolor przycisków rozpoczynających odliczanie\r\n        colorActiveMainButtons: \"#fff\",\r\n        colorCircuralProgress: \"#0288D1\",\r\n        colorCircuralProgressBack: \"#e2e0ec\",\r\n        colorBorderLineInMoreComponent: \"1px solid #0288D1\",\r\n        colorBorderLineInStopwatch: \"1px solid #0288D1\"\r\n    },\r\n    global: {\r\n        colorMainButtons: \"#e2e0ec\", // Kolor wszystkich przycisków (notActive, notFocus,, notOnClick)\r\n        colorMainButtonsHover: \"#84878a\" // Kolor najazdu kursora na wszystkie przyciski główne\r\n    }\r\n\r\n}\r\n\r\nexport default ThemeObject","import React from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst LogoDiv = styled.div`\r\n  overflow: hidden;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  margin: 0px auto;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  h1 {\r\n    font-size: 70px;\r\n    letter-spacing: 30px;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <LogoDiv>\r\n      <h1>TIME</h1>\r\n    </LogoDiv>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import { createContext } from 'react';\r\n\r\nexport const defaultObject = {\r\n    theme: \"light\",\r\n    setTheme: () => {}\r\n}\r\n\r\nexport const AppContext = createContext(defaultObject);\r\n","import React, { useContext, useState } from \"react\";\r\nimport Switch from \"@mui/material/Switch\";\r\nimport styled from \"styled-components\";\r\n\r\nimport ThemeObject from \"../config/configTheme\"\r\nimport Logo from \"../Components/Logo\";\r\n\r\n// Importujemy nasz appContext\r\nimport { AppContext } from \"../AppContext\";\r\n\r\nconst HeaderContainer = styled.div`\r\n    position: relative;\r\n    max-width: 700px;\r\n    margin: 0 auto;\r\n    color: ${(props) => (props.theme === \"light\" ? props.themeObject.light.colorHeader : props.themeObject.dark.colorHeader)};\r\n`\r\n\r\nconst SwitchElement = styled.div`\r\n  width: 50px;\r\n  position: absolute;\r\n  right: 20px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n`;\r\n\r\nconst Header = () => {\r\n  const { setTheme } = useContext(AppContext);\r\n  const { theme } = useContext(AppContext);\r\n\r\n  const [switchBtn, setSwitchBtn] = useState(false);\r\n  const handleSwitchBtn = () => {\r\n    setSwitchBtn((prevValue) => !prevValue);\r\n    setTheme();\r\n  };\r\n\r\n  console.log(ThemeObject)\r\n  return (\r\n    <HeaderContainer theme={theme} themeObject = {ThemeObject}>\r\n      <Logo />\r\n      <SwitchElement>\r\n        <Switch\r\n          checked={switchBtn}\r\n          onChange={handleSwitchBtn}\r\n          inputProps={{ \"aria-label\": \"controlled\" }}\r\n          size={\"medium\"}\r\n          color={\"info\"}\r\n        />\r\n      </SwitchElement>\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// Importujemy nasz appContext\r\nimport { AppContext } from \"../AppContext\";\r\n\r\n// Importujemy obiekt motywu\r\nimport ThemeObject from \"../config/configTheme\";\r\n\r\nconst Container = styled.div`\r\n  margin: 20px auto;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  max-width: 400px;\r\n  //border: 1px solid red;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 5px 15px;\r\n  outline: ${(props) =>\r\n    props.active\r\n      ? props.theme === \"light\"\r\n        ? props.themeObject.light.colorTimersBarBorder\r\n        : props.themeObject.dark.colorTimersBarBorder\r\n      : \"1.5px solid transparent\"};\r\n  font-size: 1rem;\r\n  background-color: transparent;\r\n  border: 0;\r\n  border-radius: 10px;\r\n  transition: 0.25s;\r\n  color: ${(props) =>\r\n    props.theme === \"light\"\r\n      ? props.themeObject.light.colorTimersBar\r\n      : props.themeObject.dark.colorTimersBar};\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst TimersBar = ({ handler, activeButton }) => {\r\n  const { theme } = useContext(AppContext);\r\n\r\n  const buttonsProperty = [\r\n    {\r\n      title: \"Stoper\",\r\n      name: \"stopwatch\",\r\n    },\r\n    {\r\n      title: \"Timer\",\r\n      name: \"timer\",\r\n    },\r\n    {\r\n      title: \"Alarm\",\r\n      name: \"alarm\",\r\n    },\r\n    {\r\n      title: \"Więcej..\",\r\n      name: \"more_time\",\r\n    },\r\n  ];\r\n  const Buttons = buttonsProperty.map((item) => (\r\n    <Button\r\n      theme={theme}\r\n      themeObject={ThemeObject}\r\n      active={activeButton === item.name ? true : false}\r\n      onClick={handler.bind(this, item.name)}\r\n    >\r\n      {item.title}\r\n    </Button>\r\n  ));\r\n\r\n  return <Container>{Buttons}</Container>;\r\n};\r\n\r\nexport default TimersBar;\r\n\r\n// color: ${props => props.active ? \"black\" : \"black\"};\r\n\r\n/*\r\n\r\n<Button active={activeButton === \"stopwatch\" ? true : false} onClick={handler.bind(this, 'stopwatch')}>Stopwatch</Button>\r\n<Button onClick={handler.bind(this, 'timer')}>Timer</Button>\r\n<Button onClick={handler.bind(this, 'alarm')}>Alarm</Button>\r\n<Button onClick={handler.bind(this, 'more_time')}>More time</Button>\r\n\r\n*/\r\n","import React, {useState} from 'react';\r\n\r\n\r\nconst DisplayLaps = ({seconds, minutes, hours}) => {\r\n    const [laps, setLaps] = useState([]) \r\n\r\n    const handleSaveTime = () => {  \r\n        const item = {\r\n            id: laps.length,\r\n            /*timeMiliSec: milicesonds <= 9 ? `0${milicesonds}` : milicesonds,*/\r\n            timeSec: seconds <= 9 ? `0${seconds}` : seconds,\r\n            timeMin: minutes <= 9 ? `0${minutes}` : minutes,\r\n            timeHour: hours <= 9 ? `0${hours}` : hours,\r\n        } \r\n        //setLaps([...laps, item].reverse()) // Odwracanie tablicy aby ostatni czas wyświetlany był jako pierwszy\r\n        setLaps([item, ...laps])\r\n    }\r\n\r\n    const handleResetSavedTime = () => {\r\n        setLaps([])\r\n    }\r\n\r\n    const displayLaps = (\r\n        laps.map(item => (\r\n            <p key={item.id}>\r\n                {item.id+1}{\" czas: \"}\r\n                {item.timeHour > 0 ? item.timeHour + `:`: null}\r\n                {item.timeMin > 0 ? item.timeMin + `:` : null }\r\n                {item.timeSec}\r\n            </p>\r\n        ))\r\n    )\r\n\r\n    const btnResetSavedLapsDisplay = laps.length > 0 ? <button onClick={handleResetSavedTime.bind(this)}>Reset laps</button> : null\r\n\r\n    return(\r\n        <>\r\n        <button onClick={handleSaveTime.bind(this)}>Save time</button>\r\n        {displayLaps}\r\n        {btnResetSavedLapsDisplay}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DisplayLaps;","import React, { useContext, useEffect, useState } from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\n// Import kontektstu\r\nimport { AppContext } from \"../AppContext\";\r\n\r\n// Import obiektu motywu\r\nimport ThemeObject from \"../config/configTheme\";\r\n\r\nimport DisplayLaps from \"../Components/DisplayLaps\";\r\n\r\n// Stylowanie komponentu StopWatch\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  text-align: center;\r\n\r\n  button {\r\n    font-size: 1.5rem;\r\n    margin: 0 20px;\r\n    border-radius: 25px;\r\n    outline: none;\r\n    border: none;\r\n    padding: 10px 20px;\r\n    margin: 10px;\r\n    width: 300px;\r\n    transition: 0.1s;\r\n    background-color: ${(props) => props.themeObject.global.colorMainButtons};\r\n\r\n    :hover {\r\n      cursor: pointer;\r\n      background-color: ${(props) => props.themeObject.global.colorMainButtonsHover};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Buttons = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0 auto;\r\n\r\n  .start_stop {\r\n    background-color: ${(props) =>\r\n      props.value\r\n        ? props.theme === \"light\"\r\n          ? props.themeObject.light.colorStartCalculate\r\n          : props.themeObject.dark.colorStartCalculate\r\n        : props.themeObject.global.colorMainButtons};\r\n  }\r\n\r\n  .reset:active {\r\n    background-color: #f0694f;\r\n  }\r\n`;\r\n\r\nconst StopWatch = styled.div`\r\n  font-size: 5rem;\r\n  margin: 10vh 0;\r\n  position: relative;\r\n\r\n  .miliseconds_box {\r\n    font-size: 3rem;\r\n    margin-left: 5px;\r\n    position: absolute;\r\n    transform: translateY(-50%);\r\n    top: 50%;\r\n  }\r\n`;\r\n\r\nconst DisplayTimes = styled.p`\r\n  p {\r\n    border-bottom: ${(props) => props.theme === 'light' ? props.themeObject.light.colorBorderLineInStopwatch : props.themeObject.dark.colorBorderLineInStopwatch};\r\n    margin: 10px 20%;\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nconst Stopwatch = () => {\r\n  const [flag, setFlag] = useState(false);\r\n  const [seconds, setSeconds] = useState(0);\r\n  const [minutes, setMinutes] = useState(0);\r\n  const [hours, setHours] = useState(0);\r\n\r\n  // Obsługa motywu z kontekstu\r\n  const { theme } = useContext(AppContext);\r\n\r\n  useEffect(() => {\r\n    const stopwatch = setTimeout(() => {\r\n      if (flag) setSeconds((prevValue) => prevValue + 1);\r\n    }, 1000);\r\n\r\n    return () => clearTimeout(stopwatch);\r\n  });\r\n\r\n  const resetStopwatch = () => {\r\n    setHours(0);\r\n    setMinutes(0);\r\n    setSeconds(0);\r\n    setFlag(false);\r\n  };\r\n\r\n  if (seconds > 59) {\r\n    setSeconds(0);\r\n    setMinutes((prevValue) => prevValue + 1);\r\n  }\r\n\r\n  if (minutes > 59) {\r\n    setMinutes(0);\r\n    setHours((prevValue) => prevValue + 1);\r\n  }\r\n\r\n  const displayStopwatch = (\r\n    <span>\r\n      {\r\n        hours > 0\r\n          ? `${hours}:`\r\n          : \"\" /* Wyświetlanie dopiero gdy jest większe od 0 */\r\n      }\r\n      {minutes > 0 || hours > 0\r\n        ? minutes <= 9 && hours > 0\r\n          ? `0${minutes}:`\r\n          : `${minutes}:`\r\n        : \"\"}\r\n      {seconds <= 9 ? `0${seconds}` : seconds}\r\n      {/* <span className='miliseconds_box'>:{milicesonds <= 9 ? `0${milicesonds}` : milicesonds }</span>*/}\r\n    </span>\r\n  );\r\n\r\n  return (\r\n    <Container theme={theme} themeObject={ThemeObject}>\r\n      <StopWatch>{displayStopwatch}</StopWatch>\r\n      <Buttons value={flag} themeObject={ThemeObject}>\r\n        <button\r\n          className=\"start_stop\"\r\n          onClick={() => {\r\n            setFlag((prevValue) => !prevValue);\r\n          }}\r\n        >\r\n          {flag ? \"Stop\" : \"Start\"}\r\n        </button>\r\n        <button className=\"reset\" onClick={resetStopwatch.bind(this)}>\r\n          Reset\r\n        </button>\r\n      </Buttons>\r\n      <DisplayTimes theme={theme} themeObject={ThemeObject}>\r\n        <DisplayLaps seconds={seconds} minutes={minutes} hours={hours} />\r\n      </DisplayTimes>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Stopwatch;\r\n","import React from 'react';\r\n\r\nconst timeDifference = (year, month, day, hour, minutes, seconds ) => {\r\n    const timeNow = new Date()\r\n\r\n    const timeTimer = new Date(year, month-1, day, hour, minutes, seconds)\r\n\r\n    const msInADay = 24 * 60 * 60 * 1000; //1 dzień w milisekundach\r\n\r\n    // Obliczanie różnicy czasu w ms\r\n    const timeDifference = timeTimer.getTime() - timeNow.getTime();\r\n\r\n    const eDaysToDate = timeDifference / msInADay;\r\n    const daysToDate = Math.floor(eDaysToDate);\r\n    \r\n    let daysToDateFix = (daysToDate < 1)? 1 : daysToDate;\r\n\r\n    const eHoursToDate = (eDaysToDate % daysToDateFix)*24;\r\n    const hoursToDate = Math.floor(eHoursToDate);\r\n\r\n    const eMinutesToDate = (eHoursToDate - hoursToDate)*60;\r\n    const minutesToDate = Math.floor(eMinutesToDate);\r\n\r\n    const eSecondsToDate = Math.floor((eMinutesToDate - minutesToDate)*60);\r\n    const secondsToDate = Math.floor(eSecondsToDate);\r\n\r\n    const endTime = timeDifference < 0; // Czy koniec odliczania\r\n\r\n    return {\r\n        days : daysToDate,\r\n        hours : hoursToDate,\r\n        minutes : minutesToDate,\r\n        seconds : secondsToDate,\r\n        endTime\r\n    }\r\n}\r\n\r\nexport default timeDifference;","import React, {useEffect, useState} from 'react';\r\nimport styled from \"styled-components\";\r\n\r\n// Import obiektu motywu\r\nimport ThemeObject from \"../config/configTheme\";\r\n\r\nimport Button from '@mui/material/Button';\r\n\r\nimport timeDifference from './TimeDifferenceCalculate';\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    .btn_start, .alert_input_date {\r\n        margin: 20px auto;\r\n        font-size: 1.5rem;\r\n        border-radius: 25px;\r\n        outline: none;\r\n        border: none;\r\n        padding: 10px 20px;\r\n        transition: .25s;\r\n    }\r\n\r\n    .alert_input_date {\r\n        font-size: 20px;\r\n    }\r\n\r\n    .btn_start {\r\n        background-color:  ${(props) => props.themeObject.global.colorMainButtons };\r\n    }\r\n\r\n    .btn_start:hover{\r\n        cursor: pointer;\r\n        background-color:  ${(props) => props.themeObject.global.colorMainButtonsHover };\r\n    }\r\n    \r\n`\r\n\r\nconst FormBox = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    margin-top: 20px;\r\n    \r\n\r\n    .timer_date {\r\n        margin: 0 auto;\r\n        width: 250px;\r\n        height: 50px;\r\n        font-size: 25px;\r\n        text-align: center;\r\n    }\r\n    \r\n\r\n    .timer_hour {\r\n        width: 100%;\r\n        display: flex;\r\n        justify-content: center;\r\n        margin-top: 20px;\r\n    }\r\n\r\n    .handle_Time_Box_Timer{\r\n        display: flex;\r\n        flex-direction: column;\r\n        margin: 0 10px;\r\n    }\r\n\r\n    input {\r\n        margin: 10px auto;\r\n        height: 70px;\r\n        width: 70px;\r\n        text-align: center;\r\n        font-size: 30px;\r\n    }\r\n\r\n    button {\r\n        font-size: 40px;\r\n        width: 70px;\r\n        height: 50px;\r\n        text-align: center;\r\n        margin: 0 auto;\r\n   }\r\n\r\n\r\n    // Ukrywanie strzałek pola input\r\n    input::-webkit-outer-spin-button,\r\n    input::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n    }\r\n\r\n    /* Firefox */\r\n    input[type=number] {\r\n    -moz-appearance: textfield;\r\n    }\r\n`\r\nconst DisplayTimeBox = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    span {\r\n        width: 200px;\r\n        margin: 20px auto;\r\n        font-size: 25px;\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: center;\r\n\r\n        p {\r\n            padding-left: 10px;\r\n            font-size: 35px;\r\n            margin: 0;\r\n        }\r\n    }\r\n`\r\nconst Timer = () => {\r\n\r\n    // Odczyt ciasteczka\r\n    const restoreDateCookie = document.cookie.split('/');\r\n    const [isCookies, setIsCookies] = useState(restoreDateCookie[restoreDateCookie.length-1] === \"true\" ? true : false)\r\n    const q = restoreDateCookie.length;\r\n\r\n    // Zmienne główne do obsługi aplikacji\r\n    const [flag, setFlag] = useState(false);\r\n    \r\n    const [timeNowForm, setTimeNowForm] = useState(new Date())\r\n    \r\n    const [year, setYear] = useState(isCookies ? restoreDateCookie[q-7] : timeNowForm.getFullYear());\r\n    const [month, setMonth] = useState(isCookies ? restoreDateCookie[q-6] : timeNowForm.getMonth() + 1);\r\n    const [day, setDay] = useState(isCookies ? restoreDateCookie[q-5] : timeNowForm.getDate());\r\n    const [hour, setHour] = useState(isCookies ? restoreDateCookie[q-4] : timeNowForm.getHours());\r\n    const [minutes, setMinutes] = useState(isCookies ? restoreDateCookie[q-3] : timeNowForm.getMinutes());\r\n    const [seconds, setSeconds] = useState(isCookies ? restoreDateCookie[q-2] : 0);\r\n\r\n\r\n    // Obliczanie ilości dni w miesiacu, czyli ostatniego dnia miesiąca\r\n    const daysInMonth =  (month, year) => {\r\n        return new Date(year, month, 0).getDate();\r\n    }\r\n\r\n    // Wyświetlanie odliczania\r\n    const showTime = (timeDiff) => (\r\n        <DisplayTimeBox>\r\n            <span>Dni: <p>{timeDiff.days}</p></span>\r\n            <span>Godziny: <p>{timeDiff.hours}</p></span>\r\n            <span>Minuty: <p>{timeDiff.minutes}</p></span>\r\n            <span>Sekundy: <p>{timeDiff.seconds}</p></span>\r\n        </DisplayTimeBox>\r\n    )\r\n    \r\n    // Obsługa formularza\r\n    const handleForm = (e) => {\r\n        const nameValue = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        switch (nameValue) {\r\n            case \"hour\":\r\n                setHour(value)\r\n                break;\r\n            case \"minutes\":\r\n                setMinutes(value)\r\n                break;\r\n            \r\n            // testowana część kodu\r\n            case \"calendar-date\":\r\n                const tempYear = value.substring(0,4);\r\n                const tempMonh = value.substring(5,7);\r\n                const tempDay = value.substring(8,10);\r\n                setYear(tempYear)\r\n                setMonth(tempMonh)\r\n                setDay(tempDay)\r\n                break;\r\n            case \"hours\":\r\n                \r\n                value === '-' ? \r\n                (hour > 0 ? setHour(prevValue => prevValue - 1) : setHour(0)) \r\n                : (hour < 23 ? setHour(prevValue => (prevValue*1) + 1) : setHour(0)) \r\n                break;\r\n            case \"minutes_2\":\r\n                value === '-' ? \r\n                (minutes > 0 ? setMinutes(prevValue => prevValue - 1) : setMinutes(0)) \r\n                : (minutes < 59 ? setMinutes(prevValue => (prevValue*1) + 1) : setMinutes(0)) \r\n                break;\r\n                \r\n            default:\r\n                break;\r\n        }\r\n\r\n        //console.log(value)\r\n\r\n    }\r\n\r\n    // Funkcja obsługująca odliczanie. Decyduje czy podano poprawną datę czy nie.\r\n    const handleTimer = () => {\r\n        if(!timeDiff.endTime) setFlag(prevValue => !prevValue)\r\n        \r\n        // Usuwanie ciasteczka w momencie tylko gdy użytkownik zatrzyma odliczanie\r\n        if(flag) {\r\n            document.cookie = \"timerCookie=; SameSite=None; secure; max-age=-1;\"\r\n        }\r\n    }\r\n\r\n\r\n    const form = (\r\n        <FormBox>\r\n            <input className='timer_date' type=\"date\" name=\"calendar-date\" min=\"2022-03-30\"  onChange={handleForm}/>\r\n            <br/>\r\n            <div className='timer_hour'>\r\n                <div className='handle_Time_Box_Timer'>\r\n                    <Button  name=\"hours\" value=\"+\" onClick={handleForm.bind(this)}>+</Button>\r\n                    <input readOnly=\"readOnly\" type='number' name=\"hours\" min={day > timeNowForm.getDate() ? \"0\" : timeNowForm.getHours()} max=\"23\" value={hour} onChange={handleForm}/> \r\n                    <Button  name=\"hours\" value=\"-\" onClick={handleForm.bind(this)}>-</Button>\r\n                </div>\r\n                <div className='handle_Time_Box_Timer'>\r\n                    <Button  name=\"minutes_2\" value=\"+\" onClick={handleForm.bind(this)}>+</Button>\r\n                    <input readOnly=\"readOnly\" type='number' name=\"minutes_2\" min={ hour > timeNowForm.getHours() ? \"0\" : timeNowForm.getMinutes() } max=\"59\" value={minutes} onChange={handleForm}/> \r\n                    <Button  name=\"minutes_2\" value=\"-\" onClick={handleForm.bind(this)}>-</Button>\r\n                </div>\r\n            </div>\r\n        </FormBox>\r\n    )\r\n\r\n    let timeDiff = timeDifference(year, month, day, hour, minutes, seconds);\r\n\r\n\r\n    // Tworzenie ciasteczka gdy: nie istnieje && gdy rozpoczniemy odliczanie    \r\n    if(isCookies === false && flag === true){\r\n        document.cookie = `timerCookie = /${year}/${month}/${day}/${hour}/${minutes}/${seconds}/true; SameSite=None; secure`\r\n    }\r\n\r\n    // Sprawdzenie co zawiera ciasteczko aktualnie\r\n    //console.log(restoreDateCookie)\r\n\r\n    useEffect(() => {\r\n        const timer = setInterval(() => {\r\n            if(flag) setTimeNowForm(new Date())\r\n          }, 1000);\r\n\r\n        return () => clearInterval(timer)\r\n    })\r\n\r\n    return ( \r\n        <Container themeObject={ThemeObject}>\r\n            {flag ? null : form}\r\n            {timeDiff.endTime ? <span className='alert_input_date'>Podaj prawidłową datę</span> : (flag ? showTime(timeDiff) : null)}\r\n            {!timeDiff.endTime ? <button className='btn_start' onClick={handleTimer}>{flag === false ? \"Rozpocznij odliczanie\" : \"Stop\"}</button> : null}\r\n        </Container>\r\n     );\r\n}\r\n \r\nexport default Timer;\r\n\r\n\r\n    /*const timeDifference = (year, month, day, hour, minutes, seconds ) => {\r\n        const timeNow = new Date()\r\n\r\n        const timeTimer = new Date(year, month-1, day, hour, minutes, seconds)\r\n\r\n        const msInADay = 24 * 60 * 60 * 1000; //1 dzień w milisekundach\r\n\r\n        // Obliczanie różnicy czasu w ms\r\n        const timeDifference = timeTimer.getTime() - timeNow.getTime();\r\n    \r\n        const eDaysToDate = timeDifference / msInADay;\r\n        const daysToDate = Math.floor(eDaysToDate);\r\n        \r\n        let daysToDateFix = (daysToDate < 1)? 1 : daysToDate;\r\n\r\n        const eHoursToDate = (eDaysToDate % daysToDateFix)*24;\r\n        const hoursToDate = Math.floor(eHoursToDate);\r\n\r\n        const eMinutesToDate = (eHoursToDate - hoursToDate)*60;\r\n        const minutesToDate = Math.floor(eMinutesToDate);\r\n\r\n        const eSecondsToDate = Math.floor((eMinutesToDate - minutesToDate)*60);\r\n        const secondsToDate = Math.floor(eSecondsToDate);\r\n\r\n        const endTime = timeDifference < 0; // Czy koniec odliczania\r\n\r\n        return {\r\n            days : daysToDate,\r\n            hours : hoursToDate,\r\n            minutes : minutesToDate,\r\n            seconds : secondsToDate,\r\n            endTime\r\n        }\r\n    }*/","import React, { useState, useEffect, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\n// Import kontektstu\r\nimport { AppContext } from \"../AppContext\";\r\n\r\n// Import obiektu motywu\r\nimport ThemeObject from \"../config/configTheme\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  text-align: center;\r\n  overflow: hidden;\r\n\r\n  .btn_start {\r\n    width: 150px;\r\n    margin: 20px auto;\r\n    font-size: 1.5rem;\r\n    border-radius: 25px;\r\n    outline: none;\r\n    border: none;\r\n    padding: 10px 20px;\r\n    background-color: ${(props) => props.themeObject.global.colorMainButtons};\r\n    transition: 0.25s;\r\n  }\r\n\r\n  .btn_start:hover {\r\n    cursor: pointer;\r\n    background-color:  ${(props) => props.themeObject.global.colorMainButtonsHover };\r\n  }\r\n`;\r\n\r\nconst ProgressCircleBox = styled.div`\r\n  margin: 0 auto;\r\n  position: relative;\r\n  height: 350px;\r\n  width: 350px;\r\n\r\n  p {\r\n    position: absolute;\r\n    top: 70%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nconst RemaningTimeBox = styled.div`\r\n  z-index: 1;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  font-size: 70px;\r\n\r\n  span {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    transform: translate(-50%, -50%);\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nconst Form = styled.div`\r\n  width: 100%;\r\n  //height: 400px;\r\n  padding: 50px 0;\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  .handle_Time_Box {\r\n    width: 80px;\r\n    display: flex;\r\n    flex-wrap: wrap-reverse;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  input {\r\n    margin: 10px auto;\r\n    height: 70px;\r\n    width: 70px;\r\n    text-align: center;\r\n    font-size: 30px;\r\n  }\r\n\r\n  button {\r\n    font-size: 40px;\r\n    width: 70px;\r\n    height: 50px;\r\n  }\r\n\r\n  // Ukrywanie strzałek pola input\r\n  input::-webkit-outer-spin-button,\r\n  input::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n  }\r\n\r\n  /* Firefox */\r\n  input[type=\"number\"] {\r\n    -moz-appearance: textfield;\r\n  }\r\n`;\r\n\r\nconst Alarm = () => {\r\n  const [flag, setFlag] = useState(false);\r\n\r\n  const [hours, setHours] = useState(0);\r\n  const [minutes, setMinutes] = useState(0);\r\n  const [seconds, setSeconds] = useState(0);\r\n\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  const [secondsStart, setSecondsStart] = useState(0);\r\n\r\n  // Obsługa motywu z kontekstu\r\n  const { theme } = useContext(AppContext);\r\n\r\n  const handleTime = (e) => {\r\n    // Obsługa ustawiania wartości w formularzu\r\n    const nameValue = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    switch (nameValue) {\r\n      case \"hours\":\r\n        value < 101 ? setHours(value) : setHours(60);\r\n        console.log(\"działam\");\r\n        break;\r\n      case \"minutes\":\r\n        value < 60 ? setMinutes(value) : setMinutes(59);\r\n        break;\r\n      case \"seconds\":\r\n        value < 60 ? setSeconds(value) : setSeconds(59);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const calculate = () => {\r\n    // Obsługa CircuralProgress, obliczanie pozostałej ilości sekund i ustawianie progresu\r\n    const remainingSeconds =\r\n      secondsStart - (hours * 60 * 60 + minutes * 60 + seconds);\r\n    const calculateProgress = Math.floor(\r\n      (remainingSeconds * 100) / secondsStart\r\n    );\r\n    console.log(calculateProgress + \" %\");\r\n    setProgress(calculateProgress);\r\n\r\n    if (seconds > 0) {\r\n      setSeconds((prevValue) => prevValue - 1);\r\n    } else {\r\n      if (minutes > 0) {\r\n        setMinutes((prevValue) => prevValue - 1);\r\n        setSeconds(59);\r\n      } else {\r\n        if (hours > 0) {\r\n          setHours((prevValue) => prevValue - 1);\r\n          setMinutes(59);\r\n          setSeconds(59);\r\n        } else setFlag(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const startFunction = () => {\r\n    setSecondsStart(hours * 60 * 60 + minutes * 60 + seconds);\r\n    setFlag((prevValue) => !prevValue);\r\n  };\r\n\r\n  const handleTimeButtons = (nameParametr, typeOperation) => {\r\n    switch (nameParametr) {\r\n      case \"hours\":\r\n        if (typeOperation === \"-\" && hours > 0)\r\n          setHours((prevValue) => prevValue * 1 - 1);\r\n        else if (typeOperation === \"+\" && hours < 100)\r\n          setHours((prevValue) => prevValue * 1 + 1);\r\n        break;\r\n      case \"minutes\":\r\n        if (typeOperation === \"-\" && minutes > 0)\r\n          setMinutes((prevValue) => prevValue * 1 - 1);\r\n        else if (typeOperation === \"+\" && minutes < 59)\r\n          setMinutes((prevValue) => prevValue * 1 + 1);\r\n        break;\r\n      case \"seconds\":\r\n        if (typeOperation === \"-\" && seconds > 0)\r\n          setSeconds((prevValue) => prevValue * 1 - 1);\r\n        else if (typeOperation === \"+\" && seconds < 59)\r\n          setSeconds((prevValue) => prevValue * 1 + 1);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const form = (\r\n    <Form>\r\n      <div className=\"handle_Time_Box\">\r\n        <Button onClick={handleTimeButtons.bind(this, \"hours\", \"-\")}>-</Button>\r\n        <input\r\n          type=\"number\"\r\n          min=\"0\"\r\n          max=\"60\"\r\n          name=\"hours\"\r\n          value={hours}\r\n          onChange={handleTime}\r\n        />\r\n        <Button onClick={handleTimeButtons.bind(this, \"hours\", \"+\")}>+</Button>\r\n      </div>\r\n      <div className=\"handle_Time_Box\">\r\n        <Button onClick={handleTimeButtons.bind(this, \"minutes\", \"-\")}>\r\n          -\r\n        </Button>\r\n        <input\r\n          type=\"number\"\r\n          min=\"0\"\r\n          name=\"minutes\"\r\n          value={minutes}\r\n          onChange={handleTime}\r\n        />\r\n        <Button onClick={handleTimeButtons.bind(this, \"minutes\", \"+\")}>\r\n          +\r\n        </Button>\r\n      </div>\r\n      <div className=\"handle_Time_Box\">\r\n        <Button onClick={handleTimeButtons.bind(this, \"seconds\", \"-\")}>\r\n          -\r\n        </Button>\r\n        <input\r\n          type=\"number\"\r\n          min=\"0\"\r\n          name=\"seconds\"\r\n          value={seconds}\r\n          onChange={handleTime}\r\n        />\r\n        <Button onClick={handleTimeButtons.bind(this, \"seconds\", \"+\")}>\r\n          +\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n\r\n  const displayRemaningTime = (\r\n    <RemaningTimeBox>\r\n      <span>\r\n        {\r\n          hours > 0\r\n            ? `${hours}:`\r\n            : \"\" /* Wyświetlanie dopiero gdy jest większe od 0 */\r\n        }\r\n        {minutes > 0 || hours > 0\r\n          ? minutes <= 9 && hours > 0\r\n            ? `0${minutes}:`\r\n            : `${minutes}:`\r\n          : \"\"}\r\n        {seconds <= 9 ? `0${seconds}` : seconds}\r\n      </span>\r\n    </RemaningTimeBox>\r\n  );\r\n\r\n  // Obsługa koloru koła postępu w zależności od wybranego motywu\r\n  const colorCircuralProgres = theme === 'light' ? ThemeObject.light.colorCircuralProgress : ThemeObject.dark.colorCircuralProgress\r\n  const colorCircuralProgresBack = theme === 'light' ? ThemeObject.light.colorCircuralProgressBack : ThemeObject.dark.colorCircuralProgressBack\r\n  const progressBox = (\r\n    <ProgressCircleBox>\r\n      <CircularProgress\r\n        sx={{\r\n          color: colorCircuralProgres,\r\n          margin: \"0 auto\",\r\n          zIndex: \"0\",\r\n        }}\r\n        size={350}\r\n        thickness={0.6}\r\n        variant=\"determinate\"\r\n        value={progress}\r\n      />\r\n      <CircularProgress\r\n        sx={{\r\n          color: colorCircuralProgresBack,\r\n          position: \"absolute\",\r\n          top: \"0\",\r\n          left: \"0\",\r\n          zIndex: \"-1\",\r\n        }}\r\n        size={350}\r\n        thickness={0.5}\r\n        variant=\"determinate\"\r\n        value={100}\r\n      />\r\n      {displayRemaningTime}\r\n      <p>{progress}%</p>\r\n    </ProgressCircleBox>\r\n  );\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      if (flag) calculate();\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  });\r\n\r\n  return (\r\n    <Container themeObject={ThemeObject}>\r\n      {flag ? progressBox : form}\r\n      <button className=\"btn_start\" onClick={startFunction}>\r\n        {flag ? \"Stop\" : \"Start\"}\r\n      </button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Alarm;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport timeDifference from \"./TimeDifferenceCalculate\";\r\n\r\n// Importujemy nasz appContext\r\nimport { AppContext } from \"../AppContext\";\r\n\r\n// Import obiektu motywu\r\nimport ThemeObject from \"../config/configTheme\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column-reverse;\r\n  padding: 0 10px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst ResultTimeBox = styled.div`\r\n  max-width: 500px;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  border-bottom:  ${(props) => (props.theme === \"light\" ? props.themeObject.light.colorBorderLineInMoreComponent : props.themeObject.dark.colorBorderLineInMoreComponent)};\r\n\r\n  .box_time {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    width: 100%;\r\n    margin-top: 10px;\r\n  }\r\n\r\n  h5 {\r\n    margin: 20px 0 0 0;\r\n    font-size: 15px;\r\n    align-self: center;\r\n  }\r\n\r\n  p {\r\n    float: left;\r\n    font-size: 20px;\r\n    margin: 0;\r\n    padding-left: 10px;\r\n  }\r\n`;\r\n\r\nconst MoreTime = () => {\r\n  const { theme } = useContext(AppContext);\r\n\r\n  const [timeNowForm, setTimeNowForm] = useState(new Date());\r\n  const [year, setYear] = useState(timeNowForm.getFullYear());\r\n  const [month, setMonth] = useState(timeNowForm.getMonth() + 1);\r\n  const [day, setDay] = useState(timeNowForm.getDate());\r\n\r\n  // Do użycia w przyszłości..\r\n  const [hour, setHour] = useState(timeNowForm.getHours());\r\n  const [minutes, setMinutes] = useState(timeNowForm.getMinutes());\r\n  const [seconds, setSeconds] = useState(0);\r\n\r\n  // Obliczanie ilości dni w miesiacu, czyli ostatniego dnia miesiąca\r\n  const daysInMonth = (month, year) => {\r\n    return new Date(year, month, 0).getDate();\r\n  };\r\n\r\n  const showTime = (timeDiff, title, showSmallVersionTime) => (\r\n    <>\r\n      <h5>Do {title}:</h5>\r\n      <div className=\"box_time\">\r\n        {showSmallVersionTime ? null : <p>{timeDiff.days} dni</p>}\r\n        <p>{timeDiff.hours} h</p>\r\n        <p>{timeDiff.minutes} min</p>\r\n        {showSmallVersionTime ? <p>{timeDiff.seconds} s</p> : null}\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  const toHolidays = timeDifference(year, 7, 1, 0, 0, 0);\r\n  const toEndOfTheYear = timeDifference(year + 1, 0, 0, 0, 0, 0);\r\n  const toEndOfTheDay = timeDifference(year, month, day, 23, 59, 59);\r\n  const toEndOfTheMonth = timeDifference(\r\n    year,\r\n    month,\r\n    daysInMonth(month, year),\r\n    23,\r\n    59,\r\n    59\r\n  );\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setTimeNowForm(new Date());\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      <ResultTimeBox theme={theme} themeObject={ThemeObject} >{showTime(toHolidays, \"wakacji\")}</ResultTimeBox>\r\n      <ResultTimeBox theme={theme} themeObject={ThemeObject} >{showTime(toEndOfTheYear, \"końca roku\")}</ResultTimeBox>\r\n      <ResultTimeBox theme={theme} themeObject={ThemeObject} >\r\n        {showTime(toEndOfTheMonth, \"końca miesiąca\", false)}\r\n      </ResultTimeBox>\r\n      <ResultTimeBox theme={theme} themeObject={ThemeObject} >\r\n        {showTime(toEndOfTheDay, \"końca dnia\", true)}\r\n      </ResultTimeBox>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MoreTime;\r\n","import React, {useState} from 'react';\r\n\r\n// Importowanie przycisków (wybieranie timera)\r\nimport TimersBar from '../Components/TimersBar';\r\n\r\n// Import czasomierzy\r\nimport Stopwatch from '../Components/Stopwatch';\r\nimport Timer from '../Components/Timer';\r\nimport Alarm from '../Components/Alarm';\r\nimport MoreTime from '../Components/MoreTime';\r\n\r\n\r\n\r\nconst BodyApp = () => {\r\n\r\n    const [timeContent, setTimeContent] = useState('stopwatch');\r\n    const handleTimeContent = (nameOfTimer) =>{\r\n        console.log(nameOfTimer)\r\n        setTimeContent(nameOfTimer)\r\n    }\r\n\r\n    const displayContent = (key) => {\r\n        switch (key) {\r\n            case 'stopwatch':\r\n                return <Stopwatch />;\r\n            case 'timer':\r\n                return <Timer/>\r\n            case 'alarm':\r\n                return <Alarm/>\r\n            case 'more_time':\r\n                return <MoreTime/>\r\n                    \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <>\r\n                <TimersBar activeButton={timeContent} handler={handleTimeContent}/>\r\n                {displayContent(timeContent)}\r\n        </>\r\n     );\r\n}\r\n \r\nexport default BodyApp;","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport \"./App.css\";\r\n\r\nimport Header from \"./Layouts/Header\";\r\nimport Footer from \"./Layouts/Footer\";\r\nimport BodyApp from \"./Layouts/BodyApp\";\r\n\r\n// Import kontektstu\r\nimport { AppContext, defaultObject } from \"./AppContext\";\r\n\r\nconst GlobalContainer = styled.div`\r\n  min-height: 100vh;\r\n  box-sizing: border-box;\r\n  background-color: ${(props) => props.colorTheme === \"dark\" ? \"#0d0906\" : \"transparent\"};\r\n  transition: 0.25s;\r\n  color: ${(props) => (props.colorTheme === \"dark\" ? \"#fff\" : \"black\")};\r\n`;\r\n\r\nconst App = () => {\r\n  const [theme, setThemeValue] = useState(defaultObject.theme);\r\n\r\n  const setTheme = () => {\r\n    console.log(\"Zmiana motywu aplikacji na:\" + theme);\r\n    if (theme === \"light\") {\r\n      setThemeValue(\"dark\");\r\n    } else setThemeValue(\"light\");\r\n  };\r\n\r\n  return (\r\n    <GlobalContainer colorTheme={theme}>\r\n      <AppContext.Provider value={{ theme, setTheme }}>\r\n        <Header />\r\n        <BodyApp />\r\n      </AppContext.Provider>\r\n    </GlobalContainer>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}