{"version":3,"sources":["Images/clock.png","Components/Logo.js","Layouts/Header.js","Components/TimersBar.js","Components/Stopwatch.js","Components/Timer.js","Components/Alarm.js","Components/MoreTime.js","Layouts/BodyApp.js","App.js","index.js"],"names":["LogoDiv","styled","div","LogoText","Logo","src","clock","alt","Header","TimersBar","handler","onClick","bind","Stopwatch","useState","flag","setFlag","seconds","setSeconds","minutes","setMinutes","hours","setHours","laps","setLaps","useEffect","stopwatch","setTimeout","prevValue","clearTimeout","displayStopwatch","displayLaps","map","item","timeHour","timeMin","timeSec","id","length","Timer","restoreDateCookie","document","cookie","split","isCookies","q","Date","timeNowForm","setTimeNowForm","getFullYear","year","setYear","getMonth","month","setMonth","getDate","day","setDay","getHours","hour","setHour","getMinutes","daysInMonth","handleForm","e","nameValue","target","name","value","form","type","min","max","onChange","timeDiff","timeNow","timeDifference","getTime","eDaysToDate","daysToDate","Math","floor","eHoursToDate","hoursToDate","eMinutesToDate","minutesToDate","eSecondsToDate","days","endTime","timer","setInterval","clearInterval","showTime","Alarm","handleTime","displayRemaningTime","MoreTime","BodyApp","timeContent","setTimeContent","nameOfTimer","console","log","key","displayContent","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"2NAAe,MAA0B,kC,OCOnCA,EAAUC,IAAOC,IAAV,+IAUPC,EAAWF,IAAOC,IAAV,iHAqBCE,EAZF,WACT,OACI,eAACJ,EAAD,WACA,qBAAKK,IAAKC,EAAOC,IAAI,UACrB,eAACJ,EAAD,WACI,sCACA,iDCpBGK,EARA,WACX,OACI,mCACA,cAAC,EAAD,O,gBCMOC,EAXG,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAChB,OACI,qCACI,wBAAQC,QAASD,EAAQE,KAAK,EAAM,aAApC,uBACA,wBAAQD,QAASD,EAAQE,KAAK,EAAM,SAApC,mBACA,wBAAQD,QAASD,EAAQE,KAAK,EAAM,SAApC,mBACA,wBAAQD,QAASD,EAAQE,KAAK,EAAM,aAApC,2B,iBCkEGC,EAxEG,WAEd,MAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,mBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA0BN,mBAAS,GAAnC,mBAAOO,EAAP,KAAcC,EAAd,KACA,EAAwBR,mBAAS,IAAjC,mBAAOS,EAAP,KAAaC,EAAb,KAEAC,qBAAU,WACN,IAAMC,EAAYC,YAAW,WACtBZ,GAAMG,GAAW,SAAAU,GAAS,OAAIA,EAAW,OAC3C,KAEL,OAAO,kBAAMC,aAAaH,OAqB3BT,EAAU,KACTC,EAAW,GACXE,GAAW,SAAAQ,GAAS,OAAIA,EAAY,MAGrCT,EAAU,KACTC,EAAW,GACXE,GAAS,SAAAM,GAAS,OAAIA,EAAW,MAGrC,IAAME,EACF,iCACKT,GAAS,EAAT,WAAiBA,GAAUA,EADhC,IAEKF,GAAW,EAAX,WAAmBA,GAAYA,EAFpC,IAGKF,GAAW,EAAX,WAAmBA,GAAYA,EAHpC,OAOEc,EACFR,EAAKS,KAAI,SAAAC,GAAI,OACT,8BACKA,EAAKC,SADV,IACqBD,EAAKE,QAD1B,IACoCF,EAAKG,UADjCH,EAAKI,OAOrB,OACI,gCACKP,EACD,wBAAQnB,QAAS,WAAQK,GAAQ,SAAAY,GAAS,OAAKA,MAA/C,SAA6Db,EAAO,OAAS,UAC7E,wBAAQJ,QAjDO,WACnBW,EAAS,GACTF,EAAW,GACXF,EAAW,GACXM,EAAQ,IACRR,GAAQ,IA4C4BJ,KAAK,GAArC,mBACA,wBAAQD,QA1CO,WACnB,IAAMsB,EAAO,CACTI,GAAId,EAAKe,OACTF,QAASnB,GAAW,EAAX,WAAmBA,GAAYA,EACxCkB,QAAShB,GAAW,EAAX,WAAmBA,GAAYA,EACxCe,SAAUb,GAAS,EAAT,WAAiBA,GAAUA,GAEzCG,EAAQ,GAAD,mBAAKD,GAAL,CAAWU,MAmCkBrB,KAAK,GAArC,uBACCmB,MCgFEQ,EAlJD,WAGV,IAAMC,EAAoBC,SAASC,OAAOC,MAAM,KAChD,EAAkC7B,mBAA2D,SAAlD0B,EAAkBA,EAAkBF,OAAO,IAAtF,mBAAOM,EAAP,KACMC,GADN,KACUL,EAAkBF,QAG5B,EAAwBxB,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,EAAsCF,mBAAS,IAAIgC,MAAnD,mBAAOC,EAAP,KAAoBC,EAApB,KAEA,EAAwBlC,mBAAS8B,EAAYJ,EAAkBK,EAAE,GAAKE,EAAYE,eAAlF,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BrC,mBAAS8B,EAAYJ,EAAkBK,EAAE,GAAKE,EAAYK,WAAa,GAAjG,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAsBxC,mBAAS8B,EAAYJ,EAAkBK,EAAE,GAAKE,EAAYQ,WAAhF,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAwB3C,mBAAS8B,EAAYJ,EAAkBK,EAAE,GAAKE,EAAYW,YAAlF,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8B9C,mBAAS8B,EAAYJ,EAAkBK,EAAE,GAAKE,EAAYc,cAAxF,mBAAO1C,EAAP,KAAgBC,EAAhB,KACA,EAA8BN,mBAAS8B,EAAYJ,EAAkBK,EAAE,GAAK,GAA5E,mBAAO5B,EAAP,KAIM6C,GAJN,KAIqB,SAACT,EAAOH,GACzB,OAAO,IAAIJ,KAAKI,EAAMG,EAAO,GAAGE,YAiD9BQ,EAAa,SAACC,GAChB,IAAMC,EAAYD,EAAEE,OAAOC,KACrBC,EAAQJ,EAAEE,OAAOE,MAEvB,OAAQH,GACJ,IAAK,OACDd,EAAQiB,GACR,MACJ,IAAK,QACDd,EAASc,GACT,MACJ,IAAK,MACDX,EAAOW,GACP,MACJ,IAAK,OACDR,EAAQQ,GACR,MACJ,IAAK,UACDhD,EAAWgD,KAmBjBC,EACF,qCAAE,uBACE,uBAAOC,KAAK,SAASH,KAAK,OAAOI,IAAKxB,EAAYE,cAAeuB,IAAI,OAAOJ,MAAOlB,EAAMuB,SAAUV,IACnG,uBAAOO,KAAK,SAASH,KAAK,QAAQI,IAAKrB,EAAOH,EAAYE,cAAgB,IAAMF,EAAYK,WAAW,EAAGoB,IAAI,KAAKJ,MAAOf,EAAOoB,SAAUV,IAC3I,uBAAOO,KAAK,SAASH,KAAK,MAAMI,IAAKlB,EAAQN,EAAYK,WAAW,EAAI,IAAML,EAAYQ,UAAWiB,IAAKV,EAAYT,EAAOH,GAAOkB,MAAOZ,GAAOM,EAAYT,EAAOH,GAAQM,EAAMM,EAAYT,EAAOH,GAAQuB,SAAUV,IACxN,uBAAOO,KAAK,SAASH,KAAK,OAAOI,IAAKf,EAAMT,EAAYQ,UAAY,IAAMR,EAAYW,WAAYc,IAAI,KAAKJ,MAAOT,EAAMc,SAAUV,IAClI,uBAAOO,KAAK,SAASH,KAAK,UAAUI,IAAMZ,EAAOZ,EAAYW,WAAa,IAAMX,EAAYc,aAAeW,IAAI,KAAKJ,MAAOjD,EAASsD,SAAUV,OAIlJW,EA7FmB,SAACxB,EAAMG,EAAOG,EAAKG,EAAMxC,EAASF,GACrD,IAAM0D,EAAU,IAAI7B,KAOd8B,EALY,IAAI9B,KAAKI,EAAMG,EAAM,EAAGG,EAAKG,EAAMxC,EAASF,GAK7B4D,UAAYF,EAAQE,UAE/CC,EAAcF,EALH,MAMXG,EAAaC,KAAKC,MAAMH,GAIxBI,EAAgBJ,GAFDC,EAAa,EAAI,EAAIA,GAES,GAC7CI,EAAcH,KAAKC,MAAMC,GAEzBE,EAA8C,IAA5BF,EAAeC,GACjCE,EAAgBL,KAAKC,MAAMG,GAE3BE,EAAiBN,KAAKC,MAAuC,IAAhCG,EAAiBC,IAKpD,MAAO,CACHE,KAAOR,EACP1D,MAAQ8D,EACRhE,QAAUkE,EACVpE,QARkB+D,KAAKC,MAAMK,GAS7BE,QAPYZ,EAAiB,GAqEtBA,CAAe1B,EAAMG,EAAOG,EAAKG,EAAMxC,EAASF,GAmB/D,OAfiB,IAAd2B,IAAgC,IAAT7B,IACtB0B,SAASC,OAAT,yBAAoCQ,EAApC,YAA4CG,EAA5C,YAAqDG,EAArD,YAA4DG,EAA5D,YAAoExC,EAApE,YAA+EF,EAA/E,iCAMJQ,qBAAU,WACN,IAAMgE,EAAQC,aAAY,WACnB3E,GAAMiC,EAAe,IAAIF,QAC3B,KAEL,OAAO,kBAAM6C,cAAcF,OAI3B,qCACK1E,EAAO,KAAOsD,EACdK,EAASc,QAAU,uCAA2BzE,EA/EtC,SAAC2D,GAAD,OACT,qCACA,sCAASA,EAASa,QAClB,0CAAab,EAASrD,SACtB,yCAAYqD,EAASvD,WACrB,0CAAauD,EAASzD,cA0EgC2E,CAASlB,GAAY,KACzEA,EAASc,QAAuG,KAA7F,wBAAQ7E,QA3CjB,WACZ+D,EAASc,SAASxE,GAAQ,SAAAY,GAAS,OAAKA,KAGzCb,IACC0B,SAASC,OAAS,qDAsCG,UAAwC,IAAT3B,EAAiB,wBAA0B,aC1D5F8E,EApFD,WAEV,MAAwB/E,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,EAA0BF,mBAAS,GAAnC,mBAAOO,EAAP,KAAcC,EAAd,KACA,EAA8BR,mBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA8BN,mBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEM4E,EAAa,SAAC9B,GAChB,IAAMC,EAAYD,EAAEE,OAAOC,KACrBC,EAAQJ,EAAEE,OAAOE,MAEvB,OAAQH,GACJ,IAAK,QACD3C,EAAS8C,GACT,MACJ,IAAK,UACDhD,EAAWgD,GACX,MACJ,IAAK,UACDlD,EAAWkD,KAgCjBC,EACF,qCAAE,uBACE,uBAAOC,KAAK,SAASH,KAAK,QAAQC,MAAO/C,EAAOoD,SAAUqB,IAC1D,uBAAOxB,KAAK,SAASH,KAAK,UAAUC,MAAOjD,EAASsD,SAAUqB,IAC9D,uBAAOxB,KAAK,SAASH,KAAK,UAAUC,MAAOnD,EAASwD,SAAUqB,OAIhEC,EACF,qCACI,wCAAW1E,KACX,0CAAaF,KACb,0CAAaF,QAYrB,OARAQ,qBAAU,WACN,IAAMgE,EAAQC,aAAY,WACnB3E,IA1CJE,EAAU,EACTC,GAAW,SAAAU,GAAS,OAAIA,EAAW,KAGhCT,EAAU,GACTC,GAAW,SAAAQ,GAAS,OAAIA,EAAW,KACnCV,EAAW,KAGRG,EAAQ,GACPC,GAAS,SAAAM,GAAS,OAAIA,EAAW,KACjCR,EAAW,IACXF,EAAW,KAGXF,GAAQ,MA4Bf,KAEL,OAAO,kBAAM2E,cAAcF,OAI3B,qCACK1E,EAAOgF,EAAsB1B,EAC9B,wBAAQ1D,QAAS,kBAAMK,GAAQ,SAAAY,GAAS,OAAKA,MAA7C,SAA0Db,EAAO,OAAS,cCvEvEiF,EARE,WACb,OACI,oECuCOC,EAhCC,WAEZ,MAAsCnF,mBAAS,aAA/C,mBAAOoF,EAAP,KAAoBC,EAApB,KAsBA,OACI,qCACI,cAAC,EAAD,CAAWzF,QAvBO,SAAC0F,GACvBC,QAAQC,IAAIF,GACZD,EAAeC,MAGI,SAACG,GACpB,OAAQA,GACJ,IAAK,YACD,OAAO,cAAC,EAAD,IACX,IAAK,QACD,OAAO,cAAC,EAAD,IACX,IAAK,QACD,OAAO,cAAC,EAAD,IACX,IAAK,YACD,OAAO,cAAC,EAAD,KAUVC,CAAeN,OCvBbO,MATf,WACE,OACE,qCACA,cAAC,EAAD,IACA,cAAC,EAAD,QCLJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnE,SAASoE,eAAe,W","file":"static/js/main.a3a06425.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/clock.1f5cb8c8.png\";","import React from 'react';\r\n\r\nimport styled from 'styled-components'\r\n\r\nimport clock from '../Images/clock.png'\r\n\r\n\r\nconst LogoDiv = styled.div`\r\n    border: 1px solid red;\r\n    overflow: hidden;\r\n\r\n    img {\r\n        width: 5rem;\r\n        float: left;\r\n    }\r\n`\r\n\r\nconst LogoText = styled.div`\r\n    float: left;\r\n    margin-left: 10px;\r\n\r\n    h1, h2 {\r\n        margin: 0;\r\n    }\r\n`\r\n\r\nconst Logo = () => {\r\n    return ( \r\n        <LogoDiv>\r\n        <img src={clock} alt=\"clock\" />\r\n        <LogoText>\r\n            <h2>Your</h2>\r\n            <h1>TimerTab</h1>\r\n        </LogoText>\r\n        </LogoDiv>\r\n     );\r\n}\r\n \r\nexport default Logo;","import React from 'react';\r\n\r\nimport Logo from '../Components/Logo'\r\n\r\nconst Header = () => {\r\n    return ( \r\n        <>\r\n        <Logo />\r\n        </>\r\n     );\r\n}\r\n \r\nexport default Header;","import React from 'react';\r\n\r\nconst TimersBar = ({handler}) => {\r\n    return ( \r\n        <>\r\n            <button onClick={handler.bind(this, 'stopwatch')}>Stopwatch</button>\r\n            <button onClick={handler.bind(this, 'timer')}>Timer</button>\r\n            <button onClick={handler.bind(this, 'alarm')}>Alarm</button>\r\n            <button onClick={handler.bind(this, 'more_time')}>More time</button>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default TimersBar;","import React, {useEffect, useState} from 'react';\r\n\r\nconst Stopwatch = () => {\r\n\r\n    const [flag, setFlag] = useState(false)\r\n    const [seconds, setSeconds] = useState(0);\r\n    const [minutes, setMinutes] = useState(0);\r\n    const [hours, setHours] = useState(0)\r\n    const [laps, setLaps] = useState([]) \r\n\r\n    useEffect(() => {\r\n        const stopwatch = setTimeout(() => {\r\n            if(flag) setSeconds(prevValue => prevValue +1)\r\n          }, 1000);\r\n\r\n        return () => clearTimeout(stopwatch)\r\n    })\r\n\r\n    const resetStopwatch = () => {\r\n        setHours(0);\r\n        setMinutes(0);\r\n        setSeconds(0);\r\n        setLaps([])\r\n        setFlag(false);\r\n    }\r\n\r\n    const handleSaveTime = () => {  \r\n        const item = {\r\n            id: laps.length,\r\n            timeSec: seconds <= 9 ? `0${seconds}` : seconds,\r\n            timeMin: minutes <= 9 ? `0${minutes}` : minutes,\r\n            timeHour: hours <= 9 ? `0${hours}` : hours,\r\n        } \r\n        setLaps([...laps, item])\r\n    }\r\n\r\n    if(seconds > 59) {\r\n        setSeconds(0);\r\n        setMinutes(prevValue => prevValue + 1);\r\n    }\r\n\r\n    if(minutes > 59){\r\n        setMinutes(0);\r\n        setHours(prevValue => prevValue +1)\r\n    }\r\n\r\n    const displayStopwatch = (\r\n        <span>\r\n            {hours <= 9 ? `0${hours}` : hours}:\r\n            {minutes <= 9 ? `0${minutes}` : minutes}:\r\n            {seconds <= 9 ? `0${seconds}` : seconds }:\r\n        </span>\r\n    )\r\n    \r\n    const displayLaps = (\r\n        laps.map(item => (\r\n            <p key={item.id}>\r\n                {item.timeHour}:{item.timeMin}:{item.timeSec}\r\n            </p>\r\n        ))\r\n    )\r\n    \r\n\r\n    return ( \r\n        <div>\r\n            {displayStopwatch}\r\n            <button onClick={() => { setFlag(prevValue => !prevValue)}}>{flag ? 'Stop' : 'Start'}</button>\r\n            <button onClick={resetStopwatch.bind(this)}>Reset</button>\r\n            <button onClick={handleSaveTime.bind(this)}>Save time</button>\r\n            {displayLaps}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Stopwatch;","import React, {useEffect, useState} from 'react';\r\n\r\n\r\nconst Timer = () => {\r\n\r\n    // Odczyt ciasteczka\r\n    const restoreDateCookie = document.cookie.split('/');\r\n    const [isCookies, setIsCookies] = useState(restoreDateCookie[restoreDateCookie.length-1] === \"true\" ? true : false)\r\n    const q = restoreDateCookie.length;\r\n\r\n    // Zmienne główne do obsługi aplikacji\r\n    const [flag, setFlag] = useState(false);\r\n    \r\n    const [timeNowForm, setTimeNowForm] = useState(new Date())\r\n    \r\n    const [year, setYear] = useState(isCookies ? restoreDateCookie[q-7] : timeNowForm.getFullYear());\r\n    const [month, setMonth] = useState(isCookies ? restoreDateCookie[q-6] : timeNowForm.getMonth() + 1);\r\n    const [day, setDay] = useState(isCookies ? restoreDateCookie[q-5] : timeNowForm.getDate());\r\n    const [hour, setHour] = useState(isCookies ? restoreDateCookie[q-4] : timeNowForm.getHours());\r\n    const [minutes, setMinutes] = useState(isCookies ? restoreDateCookie[q-3] : timeNowForm.getMinutes());\r\n    const [seconds, setSeconds] = useState(isCookies ? restoreDateCookie[q-2] : 0);\r\n\r\n\r\n    // Obliczanie ilości dni w miesiacu, czyli ostatniego dnia miesiąca\r\n    const daysInMonth =  (month, year) => {\r\n        return new Date(year, month, 0).getDate();\r\n    }\r\n\r\n    const timeDifference = (year, month, day, hour, minutes, seconds ) => {\r\n        const timeNow = new Date()\r\n\r\n        const timeTimer = new Date(year, month-1, day, hour, minutes, seconds)\r\n\r\n        const msInADay = 24 * 60 * 60 * 1000; //1 dzień w milisekundach\r\n\r\n        // Obliczanie różnicy czasu w ms\r\n        const timeDifference = timeTimer.getTime() - timeNow.getTime();\r\n    \r\n        const eDaysToDate = timeDifference / msInADay;\r\n        const daysToDate = Math.floor(eDaysToDate);\r\n        \r\n        let daysToDateFix = (daysToDate < 1)? 1 : daysToDate;\r\n\r\n        const eHoursToDate = (eDaysToDate % daysToDateFix)*24;\r\n        const hoursToDate = Math.floor(eHoursToDate);\r\n\r\n        const eMinutesToDate = (eHoursToDate - hoursToDate)*60;\r\n        const minutesToDate = Math.floor(eMinutesToDate);\r\n\r\n        const eSecondsToDate = Math.floor((eMinutesToDate - minutesToDate)*60);\r\n        const secondsToDate = Math.floor(eSecondsToDate);\r\n\r\n        const endTime = timeDifference < 0; // Czy koniec odliczania\r\n\r\n        return {\r\n            days : daysToDate,\r\n            hours : hoursToDate,\r\n            minutes : minutesToDate,\r\n            seconds : secondsToDate,\r\n            endTime\r\n        }\r\n    }\r\n\r\n    // Wyświetlanie odliczania\r\n    const showTime = (timeDiff) => (\r\n            <>\r\n            <p>Dni: {timeDiff.days}</p>\r\n            <p>Godziny: {timeDiff.hours}</p>\r\n            <p>Minuty: {timeDiff.minutes}</p>\r\n            <p>Sekundy: {timeDiff.seconds}</p>\r\n        </>\r\n    )\r\n    \r\n    // Obsługa formularza\r\n    const handleForm = (e) => {\r\n        const nameValue = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        switch (nameValue) {\r\n            case \"year\":\r\n                setYear(value)\r\n                break;\r\n            case \"month\":\r\n                setMonth(value)\r\n                break;\r\n            case \"day\":\r\n                setDay(value)\r\n                break;\r\n            case \"hour\":\r\n                setHour(value)\r\n                break;\r\n            case \"minutes\":\r\n                setMinutes(value)\r\n                break;\r\n                \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    // Funkcja obsługująca odliczanie. Decyduje czy podano poprawną datę czy nie.\r\n    const handleTimer = () => {\r\n        if(!timeDiff.endTime) setFlag(prevValue => !prevValue)\r\n        \r\n        // Usuwanie ciasteczka w momencie tylko gdy użytkownik zatrzyma odliczanie\r\n        if(flag) {\r\n            document.cookie = \"timerCookie=; SameSite=None; secure; max-age=-1;\"\r\n        }\r\n    }\r\n\r\n\r\n    const form = (\r\n        <><br/>\r\n            <input type='number' name=\"year\" min={timeNowForm.getFullYear()} max=\"2999\" value={year} onChange={handleForm}/>\r\n            <input type='number' name=\"month\" min={year > timeNowForm.getFullYear() ? \"1\" : timeNowForm.getMonth()+1} max=\"12\" value={month} onChange={handleForm}/>\r\n            <input type='number' name=\"day\" min={month > timeNowForm.getMonth()+1 ? \"1\" : timeNowForm.getDate()} max={daysInMonth(month, year)} value={day <= daysInMonth(month, year) ? day : daysInMonth(month, year) } onChange={handleForm}/>\r\n            <input type='number' name=\"hour\" min={day > timeNowForm.getDate() ? \"0\" : timeNowForm.getHours()} max=\"23\" value={hour} onChange={handleForm}/> \r\n            <input type='number' name=\"minutes\" min={ hour > timeNowForm.getHours() ? \"0\" : timeNowForm.getMinutes() } max=\"59\" value={minutes} onChange={handleForm}/> \r\n        </>\r\n    )\r\n\r\n    let timeDiff = timeDifference(year, month, day, hour, minutes, seconds);\r\n\r\n\r\n    // Tworzenie ciasteczka gdy: nie istnieje && gdy rozpoczniemy odliczanie    \r\n    if(isCookies === false && flag === true){\r\n        document.cookie = `timerCookie = /${year}/${month}/${day}/${hour}/${minutes}/${seconds}/true; SameSite=None; secure`\r\n    }\r\n\r\n    // Sprawdzenie co zawiera ciasteczko aktualnie\r\n    //console.log(restoreDateCookie)\r\n\r\n    useEffect(() => {\r\n        const timer = setInterval(() => {\r\n            if(flag) setTimeNowForm(new Date())\r\n          }, 1000);\r\n\r\n        return () => clearInterval(timer)\r\n    })\r\n\r\n    return ( \r\n        <>\r\n            {flag ? null : form}\r\n            {timeDiff.endTime ? \"Podaj prawidłową datę\" : (flag ? showTime(timeDiff) : null)}\r\n            {!timeDiff.endTime ? <button onClick={handleTimer}>{flag === false ? \"Rozpocznij odliczanie\" : \"Stop\"}</button> : null}\r\n        </>\r\n     );\r\n}\r\n \r\nexport default Timer;","import React, {useState, useEffect} from 'react';\r\n\r\nconst Alarm = () => {\r\n\r\n    const [flag, setFlag] = useState(false)\r\n\r\n    const [hours, setHours] = useState(0);\r\n    const [minutes, setMinutes] = useState(0);\r\n    const [seconds, setSeconds] = useState(0);\r\n\r\n    const handleTime = (e) => {\r\n        const nameValue = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        switch (nameValue) {\r\n            case \"hours\":\r\n                setHours(value)\r\n                break;\r\n            case \"minutes\":\r\n                setMinutes(value)\r\n                break;\r\n            case \"seconds\":\r\n                setSeconds(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const calculate = () => {\r\n        if(seconds > 0) {\r\n            setSeconds(prevValue => prevValue -1)\r\n        }\r\n        else {\r\n            if(minutes > 0){\r\n                setMinutes(prevValue => prevValue -1)\r\n                setSeconds(59)\r\n            }\r\n            else {\r\n                if(hours > 0){\r\n                    setHours(prevValue => prevValue -1)\r\n                    setMinutes(59);\r\n                    setSeconds(59)\r\n                }\r\n                else(\r\n                    setFlag(false)\r\n                )\r\n            }\r\n        }\r\n        \r\n    \r\n\r\n    }\r\n    \r\n    const form = (\r\n        <><br/>\r\n            <input type='number' name=\"hours\" value={hours} onChange={handleTime} />\r\n            <input type='number' name=\"minutes\" value={minutes} onChange={handleTime} />\r\n            <input type='number' name=\"seconds\" value={seconds} onChange={handleTime} />\r\n        </>\r\n    )\r\n\r\n    const displayRemaningTime = (\r\n        <>\r\n            <p>Hours: {hours}</p>\r\n            <p>Minutes: {minutes}</p>\r\n            <p>Seconds: {seconds}</p>\r\n        </>\r\n    )\r\n\r\n    useEffect(() => {\r\n        const timer = setInterval(() => {\r\n            if(flag) calculate()\r\n          }, 1000);\r\n\r\n        return () => clearInterval(timer)\r\n    })\r\n\r\n    return ( \r\n        <>  \r\n            {flag ? displayRemaningTime : form}\r\n            <button onClick={() => setFlag(prevValue => !prevValue)}>{flag ? \"Stop\" : \"Start\"}</button>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default Alarm;","import React from 'react';\r\n\r\nconst MoreTime = () => {\r\n    return ( \r\n        <>\r\n        renderuje więcej opcji\r\n        </>\r\n     );\r\n}\r\n \r\nexport default MoreTime;","import React, {useState} from 'react';\r\n\r\n// Importowanie przycisków (wybieranie timera)\r\nimport TimersBar from '../Components/TimersBar';\r\n\r\n// Import czasomierzy\r\nimport Stopwatch from '../Components/Stopwatch';\r\nimport Timer from '../Components/Timer';\r\nimport Alarm from '../Components/Alarm';\r\nimport MoreTime from '../Components/MoreTime';\r\n\r\nconst BodyApp = () => {\r\n\r\n    const [timeContent, setTimeContent] = useState('stopwatch');\r\n    const handleTimeContent = (nameOfTimer) =>{\r\n        console.log(nameOfTimer)\r\n        setTimeContent(nameOfTimer)\r\n    }\r\n\r\n    const displayContent = (key) => {\r\n        switch (key) {\r\n            case 'stopwatch':\r\n                return <Stopwatch />;\r\n            case 'timer':\r\n                return <Timer/>\r\n            case 'alarm':\r\n                return <Alarm/>\r\n            case 'more_time':\r\n                return <MoreTime/>\r\n                    \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <>\r\n            <TimersBar handler={handleTimeContent}/>\r\n            {displayContent(timeContent)}\r\n        </>\r\n     );\r\n}\r\n \r\nexport default BodyApp;","import './App.css';\n\nimport Header from './Layouts/Header'\nimport Footer from './Layouts/Footer'\nimport BodyApp from './Layouts/BodyApp'\n\nfunction App() {\n  return (\n    <>\n    <Header/>\n    <BodyApp />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}